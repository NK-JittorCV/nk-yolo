# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv10 object detection model. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov10n.yaml' will call yolov10.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [1, 0.65, 640]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [40, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [40, 3, 2]] # 1-P2/4
  - [-1, 1, GlobalToken, [4, 3]]
  - [-2, 1, MSBlock, [40, [1, 3, 3], "MSBlockBottleNeckLayer", 2, 1, 0.25, True, False]]
  - [-1, 1, Conv, [80, 3, 2]] # 3-P3/8
  - [-1, 1, MSBlock, [80, [1, 3, 3], "MSBlockBottleNeckLayer", 2, 1, 0.25, True, False]]
  - [-1, 1, SCDown, [160, 3, 2]] # 5-P4/16
  - [[2, -1], 1, MSBlock, [160, [1, 5, 5], "MSBlockBottleNeckLayer", 2, 1, 0.5, True, True, 4, 3]]
  - [-1, 1, SCDown, [320, 3, 2]] # 7-P5/32
  - [[2, -1], 1, MSBlock, [320, [1, 7, 7], "MSBlockBottleNeckLayer", 2, 1, 0.5, True, True, 4, 3]]
  - [-1, 1, SPPF, [320, 5]] # 9
  - [-1, 1, PSA, [320]] # 10

# YOLOv10.0n head
head:
  - [-1, 1, nn.Upsample, [2, "nearest"]]
  - [[-1, 7], 1, Concat, [1]] # cat backbone P4
  - [-1, 1, MSBlock, [160, [1, 3, 3], "MSBlockBottleNeckLayer", 2, 1, 0.5, False, False]] # 13

  - [-1, 1, nn.Upsample, [2, "nearest"]]
  - [[-1, 5], 1, Concat, [1]] # cat backbone P3
  - [-1, 1, MSBlock, [80, [1, 3, 3], "MSBlockBottleNeckLayer", 2, 1, 0.25, False, False]] # 16 (P3/8-small)

  - [-1, 1, Conv, [80, 3, 2]]
  - [[-1, 14], 1, Concat, [1]] # cat head P4
  - [-1, 1, MSBlock, [160, [1, 3, 3], "MSBlockBottleNeckLayer", 2, 1, 0.5, False, False]] # 19 (P4/16-medium)

  - [-1, 1, SCDown, [160, 3, 2]]
  - [[-1, 11], 1, Concat, [1]] # cat head P5
  - [-1, 1, MSBlock, [320, [1, 5, 5], "MSBlockBottleNeckLayer", 2, 1, 0.5, False, False]] # 22 (P5/32-large)

  - [[17, 20, 23], 1, v10Detect, [nc]] # Detect(P3, P4, P5)
